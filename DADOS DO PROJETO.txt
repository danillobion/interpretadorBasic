Projeto



1. Equipe de 2 pessoas;

2. Livre escolha da linguagem de programação, desde que não tenha duas
equipes fazendo o compilador para a mesma linguagem; Por simplicidade, recomendo
a escolha de alguma linguagem no paradigma estruturado.

3. A partir da linguagem escolhida, vocês devem especificar um subconjunto desta linguagem,
mantendo sos requisitos mínimos:



a) Pelo menos dois tipos de dados (inteiro e ponto flutuante). Tipo string é opcional e vale ponto extra;
b) Arrays;
c) expressões aritméticas ( -, +, *, /, MOD), lógicas ( AND, OR e NOT) e relacionais ( Maior que, menor que, maior ou igual, menor ou igual, igual e diferente)
d) precedência de operadores (verificar regras da linguagem) / utilização de parênteses para "alterar" a precedência;
e) 1 comando condicional (if-else, switch ou equivalente);
f) 1 comando de repetição (for, while, do ... while, repeat ou equivalente);
g) definição e chamada de métodos ou funções;
h) a passagem de parâmetros pode ser por valor ou por referência (escolham um);
i) aninhamento entre os blocos;
j) contexto das variáveis (global, local e bloco);
k) algum comando para exibir o valor das variáveis (print ou equivalente)
l) algum comando para receber o valor das variáveis (scan ou equivalente)
m) verificações de tipo de declaração de variável e tipos de expressão

4. A saída do compilador deve ser um programa na linguagem mips, que será executado no simulador spim;

5. Devemos implementar até a etapa de geração de código intermediário;

ROTEIRO DE DESENVOLVIMENTO

a) Especificar o subconjunto da linguagem - muito importante
b) Estudar a linguagem e fazer alguns pequenos programas para teste
         i. somar dois números e exibir o resultado,
        ii. imprimir de 1 a 10 com repetição,
       iii. receber o número e verificar se é par ou ímpar
       iv. calcular o fatorial de um dado número
c) Implementar os mesmos programas em mips
d) Escrever o analisador léxico
e) Escrever o analisador sintático - se preocupar inicialmente apenas com a gramática
f) Construir a árvore sintática - Fazer de forma incremental, primeiro as expressões, depois os blocos, condicionais e repetições, deixar as funções por último
g) Análise semântica
h) gerador de código de 3 endereços - LEMBREM-SE QUE O CÓDIGO FONTE PASSADO COMO EXEMPLO NÃO ESTÁ ARMAZENANDO O CÓDIGO DE 3 ENDEREÇOS GERADO - VOCÊS DEVEM IMPLEMENTAR UMA LISTA ENCADEADA
i) gerador de código mips
j) testar o código gerado, com os programas de exemplo criados em b) e simular o resultado no spim

k) FÉRIAS !!!
